%\VignetteIndexEntry{Diagnostic plots for independent filtering}
%\VignettePackage{genefilter}

% To compile this document
% rm(list=ls());library("cacheSweave");Sweave("independent_filtering_plots.Rnw",driver=cacheSweaveDriver());system("pdflatex independent_filtering_plots")

\documentclass[10pt,oneside]{article}
\usepackage[a4paper,left=1.9cm,top=1.9cm,bottom=2.5cm,right=1.9cm,ignoreheadfoot]{geometry}
\pagestyle{empty}
\usepackage[usenames,dvipsnames]{color}
\usepackage{helvet}
\renewcommand{\familydefault}{\sfdefault}

\newcommand{\Robject}[1]{\texttt{#1}}
\newcommand{\Rpackage}[1]{\textit{#1}}
\newcommand{\Rclass}[1]{\textit{#1}}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}

\newcommand{\comment}[1]{\textsl{\textcolor{Gray}{#1}}}
\newcommand{\fixme}[1]{\textsl{\textcolor{Bittersweet}{Fixme: #1}}}

\newcommand{\thetitle}{Diagnostic plots for independent filtering}

\usepackage{graphicx}
\usepackage[pdftitle={Diagnostic plots for independent filtering},%
  pdfauthor={Richard Bourgon and Wolfgang Huber},%
  pdfpagelabels,%
  plainpages=false,%
  pdfborder={0 0 0},%
  pdfstartview=FitH,%
  bookmarks=true,%
  bookmarksnumbered=true,%
  bookmarksopen=true,%
  linktoc=section,%
  linkcolor=BlueViolet,%
  citecolor=BlueViolet,%
  urlcolor=BlueViolet,%
  linkbordercolor={.7 .7 .7},
  citebordercolor={.7 .7 .7},
  urlbordercolor={.7 .7 .7} ,
  raiselinks,%
  pdftex]{hyperref}

\usepackage{cite}
\renewcommand{\floatpagefraction}{0.9}

\usepackage{sectsty}
\sectionfont{\sffamily\bfseries\color{RoyalBlue}\sectionrule{0pt}{0pt}{-1ex}{1pt}}
\subsectionfont{\sffamily\bfseries\color{RoyalBlue}}
\subsubsectionfont{\sffamily\bfseries\color{RoyalBlue}}
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhead{}
\fancyfoot{}
\lfoot{}\cfoot{\thetitle}\rfoot{}
\renewcommand{\headrule}{}

\usepackage{Sweave}
\SweaveOpts{keep.source=TRUE,eps=FALSE,pdf=FALSE,png=TRUE,include=FALSE,width=5.4,height=3.7,resolution=180}

% The following command makes use of SVN's 'Date' keyword substitution
% To activate this, I used: svn propset svn:keywords Date independent_filtering_plots.Rnw
\title{\textsf{\textbf{\thetitle}}}
\author{Richard Bourgon, Wolfgang Huber\\[1em]European Molecular Biology Laboratory (EMBL),\\ Heidelberg, Germany}
\date{\Rpackage{genefilter} version \Sexpr{packageDescription("genefilter")$Version}  (Last revision \StrMid{$Date: 2013-02-24 11:39:28 +0100 (Sun, 24 Feb 2013) $}{8}{18})}


\begin{document}

<<options,results=hide,echo=FALSE>>=
options(digits=3, width=100)
library("pasilla") # make sure this is installed, since we need it in the next section
@

% Make title
\maketitle
\tableofcontents
\vspace{.25in}

\begin{abstract}
This vignette illustrates the use of some functions in the
\emph{genefilter} package that provide useful diagnostics 
for independent filtering~\cite{BourgonIndependentFiltering}. In
particular, it provide diagnostics that are intended to help with
\begin{packeditemize}
\item the choice of filter criterion, and
\item the choice of filter cutoff.  
\end{packeditemize}
\end{abstract}
 
%-----------------------------------------------------------
\section{Data preparation}
%-----------------------------------------------------------
For illustration, we use the \Robject{pasillaGenes} dataset from the
Bioconductor package \Rpackage{pasilla}; this is an RNA-Seq dataset
from which we extract gene-level read counts for two replicate samples
the were measured for each of two biological conditions: normally
growing cells and cells treated with dsRNA against the \emph{Pasilla}
mRNA, which led to RNAi interference (RNAi) mediated knockdown of the
Pasilla gene product.
%
<<libraries,results=hide>>=
library("pasilla")
data("pasillaGenes")
@
%
We perform a standard analysis with \Rpackage{DESeq} to look for genes
that are differentially expressed between the normal and
Pasilla-knockdown conditions (for more details, please see the
vignette of the \Rpackage{DESeq} package).
%
<<DESeq1,results=hide>>=
library("DESeq")
<<DESeq2,cache=TRUE,results=hide>>=
cds  = estimateSizeFactors( pasillaGenes)
cds  = estimateDispersions( cds )
fit1 = fitNbinomGLMs( cds, count ~ libType + condition )
fit0 = fitNbinomGLMs( cds, count ~ libType  )
pvalues  = nbinomGLMTest( fit1, fit0 )
avgcount = rowMeans(counts(cds))
@ 
%
We now use functions from \emph{genefilter} to compute overall standard devation
filter statistics as well as standard two-sample $t$ and releated statistics.

@ 
<<stats, cache=TRUE>>=
S = rowSds( exprs( sampleDataset ) )
t = rowttests( sampleDataset, sampleDataset$mol.biol )
t = t$statistic
d = t$dm
@ 



1. rank filter vs p
2. 

Load the data set and the \emph{genefilter} package:

\section{Qualitative assessment of the filter statistic}
<<libraries,results=hide>>=
library("genefilter")

\subsection{Across $p$-value cutoffs}

The \texttt{filtered\_p} function permits easy simulataneous calculation of
unadjusted or adjusted $p$-values over a range of filtering thresholds
($\theta$). Here, we return to the full ``BCR/ABL'' versus ``NEG'' data set, and
compute adjusted $p$-values using the method of Benjamini and Hochberg, for a
range of different filter stringencies.

\begin{figure}[tb]
\begin{center}
\includegraphics[width=0.49\textwidth]{rejection_plot}
\includegraphics[width=0.49\textwidth]{filtered_R_plot}
\caption{Left panel: plot produced by the \texttt{rejection\_plot} function.
Right panel: graph of \texttt{theta}.}
\label{fig:rej}
\end{center}
\end{figure}


@ 
<<table>>=
table(ALL_bcrneg$mol.biol)
@

@ 
<<filtered_p>>=
S2 = rowVars(exprs(ALL_bcrneg))
p2 = rowttests(ALL_bcrneg, "mol.biol")$p.value
theta = seq(0, .5, .1)
p_bh = filtered_p(S2, p2, theta, method="BH")
@

@ 
<<p_bh>>=
head(p_bh)
@ 

The \texttt{rejection\_plot} function takes sets of $p$-values corresponding to
different filtering choices --- in the columns of a matrix or in a list --- and
shows how rejection count ($R$) relates to the choice of cutoff for the
$p$-values. For these data, over a reasonable range of FDR cutoffs, increased
filtering corresponds to increased rejections.

@ 
<<rejection_plot, fig=TRUE>>=
rejection_plot(p_bh, at="sample",
               xlim=c(0,.3), ylim=c(0,1000),
               main="Benjamini & Hochberg adjustment")
@
The plot is shown in the left panel of Fig.~\ref{fig:rej}.




\subsection{Across filtering fractions}

If we select a fixed cutoff for the adjusted $p$-values, we can also look more
closely at the relationship between the fraction of null hypotheses filtered and
the total number of discoveries. The \texttt{filtered\_R} function wraps
\texttt{filtered\_p} and just returns rejection counts. It requires a $p$-value
cutoff. 

@ 
<<filtered_R>>=
theta = seq(0, .80, .01)
R_BH = filtered_R(alpha=.10, S2, p2, theta, method="BH")
@

@ 
<<R_BH>>=
head(R_BH)
@

Because overfiltering (or use of a filter which is inappropriate for the
application domain) discards both false and true null hypotheses, very large
values of $\theta$ reduce power in this example:

@ 
<<filtered_R_plot, fig=TRUE>>=
plot(theta, R_BH, type="l",
     xlab=expression(theta), ylab="Rejections",
     main="BH cutoff = .10"
     )
@
The plot is shown in the right panel of Fig.~\ref{fig:rej}.



%------------------------------------------------------------
\section{Filtering volcano plot}
%------------------------------------------------------------

Filtering on overall standard deviation and then using a standard $t$-statistic
induces a lower bound of fold change, albeit one which varies somewhat with the
significance of the $t$-statistic. The \texttt{filter\_volcano} function allows
you to visualize this effect.

@ 
<<filter_volcano, fig=TRUE, include=FALSE>>=
S_cutoff = quantile(S, .50)
filter_volcano(d, t$p.value, S, n1, n2, alpha=.01, S_cutoff)
@ 
The output is shown in the left panel of Fig.~\ref{fig:volcano}.

\begin{figure}[tb]
\begin{center}
\includegraphics[width=0.49\textwidth]{filter_volcano}
\includegraphics[width=0.49\textwidth]{kappa}
\caption{Left panel: plot produced by the \texttt{filter\_volcano} function.
Right panel: graph of the \texttt{kappa\_t} function.}
\label{fig:volcano}
\end{center}
\end{figure}

The \texttt{kappa\_p} and \texttt{kappa\_t} functions, used to make the volcano
plot, compute the fold change bound multiplier as a function of either a
$t$-test $p$-value or the $t$-statistic itself. The actual induced bound on the
fold change is $\kappa$ times the filter's cutoff on the overall standard
deviation. Note that fold change bounds for values of $|T|$ which are close to 0
are not of practical interest because we will not reject the null hypothesis
with test statistics in this range.

@ 
<<kappa, fig=TRUE, include=FALSE>>=
t = seq(0, 5, length=100)
plot(t, kappa_t(t, n1, n2) * S_cutoff, 
     xlab="|T|", ylab="Fold change bound", type="l")
@
The plot is shown in the right panel of Fig.~\ref{fig:volcano}.



%%%%%%%% Session info

\section*{Session information}

@ 
<<sessionInfo, results=tex, echo=FALSE>>=
si = as.character( toLatex( sessionInfo() ) )
cat( si[ -grep( "Locale", si ) ], sep = "\n" )
@


\begin{thebibliography}{10}
\bibitem{BourgonIndependentFiltering}
Richard Bourgon, Robert Gentleman and Wolfgang Huber.
\newblock Independent filtering increases power for detecting differentially
expressed genes. \textit{PNAS} (2010).
\end{thebibliography}

\end{document}
